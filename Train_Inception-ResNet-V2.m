% Load image datastore for KonIQ containing image directory in the first
% column and normalized MOS in the second column
load imds_KonIQ
imageSize=[299 299];
num_images=10073;
r=randperm(num_images);
% Partition the data into 90% for training and 10% for testing
imdsTrain=imds(r(1:floor(num_images*0.9)),:);
imdsValidation=imds(r(floor(num_images*0.9)+1:num_images),:);
% Initialize image data augmenter
augmenter = imageDataAugmenter('RandRotation',[-10 10], 'RandScale',[0.9 1.1], 'RandXReflection', 1, 'RandXTranslation', [-20 20], 'RandYTranslation', [-20 20])
%augimds = augmentedImageDatastore(imageSize,imds,'OutputSizeMode','randcrop','DataAugmentation',augmenter);
% Generate augmented image datastore for training and validation data
augimdsTrain = augmentedImageDatastore(imageSize,imdsTrain,'OutputSizeMode','randcrop','DataAugmentation',augmenter);
augimdsValidation = augmentedImageDatastore(imageSize,imdsValidation,'OutputSizeMode','centercrop','DataAugmentation',augmenter);
% Initialize training options
options = trainingOptions('sgdm', ...
    'MiniBatchSize',16, ...
    'MaxEpochs',100, ...
    'InitialLearnRate',1e-4, ...
    'Shuffle','every-epoch', ...
    'ValidationData',augimdsValidation, ...
    'ValidationFrequency',1510, ...
    'LearnRateSchedule','piecewise', ...
    'LearnRateDropFactor',0.5, ...
    'LearnRateDropPeriod',20, ...
    'ValidationPatience', 5, ...
    'ExecutionEnvironment','gpu',...
    'Verbose',true, ...
    'CheckpointPath', 'C:\Temp\checkpoint', ...
    'Plots','training-progress');
% Train the model "Inception-ResNet-V2 in this case
netTransfer = trainNetwork(augimdsTrain,irv2,options);